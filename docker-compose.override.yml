services:
  smartquotebot:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev  # optional, if you have a "dev" stage
      cache_from:
        - type=local,src=./.docker-cache
    image: smartquotebot:dev
    container_name: smartquotebot
    volumes:
      - ./src:/app/src  # <-- Live bind-mount local src/ over container src/
    environment:
      - PYTHONPATH=/app/src
      # Bot config
      - BOT__TOKEN=${BOT__TOKEN}
      - BOT__COMMAND_PREFIX=${BOT__COMMAND_PREFIX}

      # Sentry
      - SENTRY__ENABLE=${SENTRY__ENABLE}
      - SENTRY__DSN=${SENTRY__DSN}
      - SENTRY__SEND_PII=${SENTRY__SEND_PII}
      - SENTRY__TRACES_SAMPLE_RATE=${SENTRY__TRACES_SAMPLE_RATE}
      - SENTRY__PROFILING_SAMPLE_RATE=${SENTRY__PROFILING_SAMPLE_RATE}

      # Paths
      - PATHS__LOGS_DIR=${PATHS__LOGS_DIR}

      # AI
      - AI__EMBEDDING_MODEL=${AI__EMBEDDING_MODEL}

      # Database (for VectorStoreService)
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}

    depends_on:
      - pgvector-db

    restart: unless-stopped
    networks:
      - rodofbot-network

  # Add this new service:
  pgvector-db:
    image: ankane/pgvector
    container_name: pgvector-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vectorstore
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - rodofbot-network

networks:
  rodofbot-network:
    driver: bridge
