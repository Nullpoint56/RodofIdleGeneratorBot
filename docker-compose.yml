version: "3.9"

services:
  rodofbot:
    image: thomas934/rodof-bot:latest
    container_name: rodofbot
    environment:
      # App environment
      - ENV=${ENV}  # or dev in your dev docker-compose override

      # Bot
      - BOT__TOKEN=${BOT__TOKEN}
      - BOT__COMMAND_PREFIX=${BOT__COMMAND_PREFIX}

      # Sentry
      - SENTRY__ENABLE=${SENTRY__ENABLE}
      - SENTRY__DSN=${SENTRY__DSN}
      - SENTRY__SEND_PII=${SENTRY__SEND_PII}
      - SENTRY__TRACES_SAMPLE_RATE=${SENTRY__TRACES_SAMPLE_RATE}
      - SENTRY__PROFILING_SAMPLE_RATE=${SENTRY__PROFILING_SAMPLE_RATE}

      # Paths
      - PATHS__LOGS_DIR=${PATHS__LOGS_DIR}

      # Embedder
      - EMBEDDER__MODEL_NAME=${EMBEDDER__MODEL_NAME}

      # Vector Store DB
      - VECTOR_STORE__HOST=pgvector
      - VECTOR_STORE__PORT=5432
      - VECTOR_STORE__DBNAME=${VECTOR_STORE__DBNAME}
      - VECTOR_STORE__USER=${VECTOR_STORE__USER}
      - VECTOR_STORE__PASSWORD=${VECTOR_STORE__PASSWORD}
      - VECTOR_STORE__DIMENSION=${VECTOR_STORE__DIMENSION}
    depends_on:
      - pgvector
    restart: unless-stopped

  pgvector:
    image: pgvector/pgvector
    container_name: pgvector
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${VECTOR_STORE__DBNAME}
      POSTGRES_USER: ${VECTOR_STORE__USER}
      POSTGRES_PASSWORD: ${VECTOR_STORE__PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./enable_pgvector_extension.sql:/docker-entrypoint-initdb.d/enable_pgvector_extension.sql:ro # Enable PGVector

volumes:
  pgdata:
